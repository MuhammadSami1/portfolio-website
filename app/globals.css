@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 221.2 83.2% 53.3%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 221.2 83.2% 53.3%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 48%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Custom animations */
@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.animate-blink {
  animation: blink 1s infinite;
}

/* Scroll animations */
[data-animate] {
  transition: opacity 0.8s cubic-bezier(0.16, 1, 0.3, 1), transform 0.8s cubic-bezier(0.16, 1, 0.3, 1);
}

.animate-in {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

/* Delay utilities */
.delay-100 {
  transition-delay: 100ms;
}

.delay-200 {
  transition-delay: 200ms;
}

.delay-300 {
  transition-delay: 300ms;
}

.delay-400 {
  transition-delay: 400ms;
}

.delay-500 {
  transition-delay: 500ms;
}

/* Hide scrollbar but allow scrolling */
::-webkit-scrollbar {
  width: 0px;
  background: transparent;
}

/* Custom cursor styles */
html,
body {
  cursor: none;
}

@media (max-width: 768px) {
  html,
  body {
    cursor: auto;
  }
}

a,
button,
[role="button"],
input,
textarea,
select {
  cursor: none;
}

@media (max-width: 768px) {
  a,
  button,
  [role="button"],
  input,
  textarea,
  select {
    cursor: pointer;
  }
}

/* Gradient text */
.gradient-text {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-600;
}

/* Glassmorphism */
.glass {
  @apply bg-white/10 backdrop-blur-lg border border-white/20;
}

.dark .glass {
  @apply bg-black/20 backdrop-blur-lg border border-white/10;
}

/* 3D Card Effect */
.card-3d {
  transform-style: preserve-3d;
  transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
}

.card-3d:hover {
  transform: translateY(-10px) rotateX(5deg) rotateY(5deg);
}

.card-3d .card-content {
  transform: translateZ(20px);
}

/* Floating animation */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

.animate-float {
  animation: float 5s ease-in-out infinite;
}

.animate-float-slow {
  animation: float 7s ease-in-out infinite;
}

.animate-float-fast {
  animation: float 3s ease-in-out infinite;
}

/* Glow effect */
.glow {
  box-shadow: 0 0 15px rgba(59, 130, 246, 0.5);
}

.dark .glow {
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

.glow-text {
  text-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
}

/* Particle background */
.particles-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
}

.particle {
  position: absolute;
  border-radius: 50%;
  opacity: 0.3;
  animation: particle-animation 60s infinite;
}

@keyframes particle-animation {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(100px, 100px);
  }
  50% {
    transform: translate(50px, 200px);
  }
  75% {
    transform: translate(200px, 50px);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* Reveal animation */
@keyframes reveal {
  0% {
    transform: translateY(20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.animate-reveal {
  animation: reveal 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

/* Shimmer effect */
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.shimmer {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 3s infinite;
}

.dark .shimmer {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 3s infinite;
}

/* Neon effect */
.neon {
  box-shadow: 0 0 5px theme("colors.blue.400"), 0 0 10px theme("colors.blue.400"), 0 0 15px theme("colors.blue.400"), 0
    0 20px theme("colors.blue.500");
}

.neon-text {
  text-shadow: 0 0 5px theme("colors.blue.400"), 0 0 10px theme("colors.blue.400"), 0 0 15px theme("colors.blue.500");
}

/* Gradient borders */
.gradient-border {
  position: relative;
  border-radius: 0.5rem;
  z-index: 0;
}

.gradient-border::before {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ec4899);
  border-radius: 0.6rem;
  z-index: -1;
  animation: border-animation 6s linear infinite;
}

@keyframes border-animation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Morphing shapes */
.blob {
  border-radius: 42% 58% 70% 30% / 45% 45% 55% 55%;
  animation: morph 8s linear infinite;
}

@keyframes morph {
  0% {
    border-radius: 42% 58% 70% 30% / 45% 45% 55% 55%;
  }
  25% {
    border-radius: 45% 55% 65% 35% / 50% 60% 40% 50%;
  }
  50% {
    border-radius: 50% 50% 55% 45% / 55% 45% 55% 45%;
  }
  75% {
    border-radius: 55% 45% 45% 55% / 45% 50% 50% 55%;
  }
  100% {
    border-radius: 42% 58% 70% 30% / 45% 45% 55% 55%;
  }
}

